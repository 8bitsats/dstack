services:
  # Helios is a Ethereum light client
  helios:
    build:
      context: .
      dockerfile_inline: |
        FROM rust:1.80-alpine@sha256:1f5aff501e02c1384ec61bb47f89e3eebf60e287e6ed5d1c598077afc82e83d5
        WORKDIR /app
        RUN apk add --no-cache git build-base openssl-dev protobuf protobuf-dev perl
        RUN git clone https://github.com/a16z/helios && \
            cd helios && \
            git checkout 5c61864a167c16141a9a12b976c0e9398b332f07
        RUN cd helios && cargo build --release
        WORKDIR /app/helios
    command: [
      "./target/release/helios",
      "ethereum",
      "--network", "mainnet",
      "--checkpoint", "0xbee4f32f91e62060d2aa41c652f6c69431829cfb09b02ea3cad92f65bd15dcce",
      "--rpc-bind-ip", "0.0.0.0",
      "--rpc-port", "8545",
      "--consensus-rpc", "https://ethereum.operationsolarstorm.org",
      "--execution-rpc", "https://ethereum-rpc.publicnode.com"
    ]

  # Auth API is a webhook server that authenticates KMS instances and Apps launches
  auth-api:
    build:
      context: .
      dockerfile_inline: |
        FROM node:18-alpine@sha256:06f7bbbcec00dd10c21a3a0962609600159601b5004d84aff142977b449168e9
        WORKDIR /app

        RUN apk add --no-cache git
        RUN git clone https://github.com/Dstack-TEE/dstack.git && \
            cd dstack && \
            git checkout 00829daa25228d987368ecd830506905a567124c
        WORKDIR /app/dstack/kms/auth-eth
        RUN npm install && \
            npx hardhat typechain && \
            npx tsc --project tsconfig.json
        CMD node dist/src/main.js
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - ETH_RPC_URL=http://helios:8545
      - KMS_CONTRACT_ADDR=0x515cd0dd984Adc75EE8625131FcC3d2D91f7F140
    depends_on:
      - helios

  # KMS handles the TEE Remote Attestation
  kms:
    build:
      context: .
      dockerfile_inline: |
        FROM rust:1.80-alpine@sha256:1f5aff501e02c1384ec61bb47f89e3eebf60e287e6ed5d1c598077afc82e83d5
        WORKDIR /app
        RUN apk add --no-cache git build-base openssl-dev protobuf protobuf-dev
        RUN git clone https://github.com/Dstack-TEE/dstack.git && \
            cd dstack && \
            git checkout 00829daa25228d987368ecd830506905a567124c
        RUN cd dstack/kms && cargo build --release -p kms
        WORKDIR /app/dstack
        CMD ["./target/release/kms"]
    volumes:
      - kms-volume:/etc/kms
      - /var/run/tappd.sock:/var/run/tappd.sock
    ports:
      - 8043:8043
    depends_on:
      - auth-api

volumes:
  kms-volume:
