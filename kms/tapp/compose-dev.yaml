services:
  auth-api:
    build:
      context: .
      dockerfile_inline: |
        FROM node:18-alpine@sha256:06f7bbbcec00dd10c21a3a0962609600159601b5004d84aff142977b449168e9
        WORKDIR /app

        RUN apk add --no-cache git
        RUN git clone https://github.com/Dstack-TEE/dstack.git && \
            cd dstack && \
            git checkout 93b9f9c3a00d8efdf7755601c50041c473688b14
        WORKDIR /app/dstack/kms/auth-eth
        RUN npm install && \
            npx hardhat typechain && \
            npx tsc --project tsconfig.json
        CMD node dist/src/main.js
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - ETH_RPC_URL=https://rpc.phala.network
      - KMS_CONTRACT_ADDR=0xdA5C549EC47735570334CFf23ac27fBeDb52c82f
    restart: unless-stopped

  kms:
    build:
      context: .
      dockerfile_inline: |
        FROM rust:1.80@sha256:d22d8938f0403ee31c118b5bf2162b883313dd7f387f859d9f2accd7c884c385
        WORKDIR /app
        RUN apt-get update && apt-get install -y \
            git \
            build-essential \
            libssl-dev \
            protobuf-compiler \
            libprotobuf-dev \
            clang \
            libclang-dev \
            --no-install-recommends \
            && rm -rf /var/lib/apt/lists/*
        RUN git clone https://github.com/Dstack-TEE/dstack.git && \
            cd dstack && \
            git checkout 93b9f9c3a00d8efdf7755601c50041c473688b14
        WORKDIR /app/dstack
        RUN cargo build --release -p kms
        CMD ["./target/release/kms"]
    volumes:
      - kms-volume:/etc/kms
      - /var/run/tappd.sock:/var/run/tappd.sock
    ports:
      - 8000:8000
    depends_on:
      - auth-api
    restart: unless-stopped

volumes:
  kms-volume:
